import tkinter as tk
import random
from tkinter import messagebox
import time

# –î–∞–Ω–Ω—ã–µ –æ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞—Ö
data = {
    "–ü–∞—Ä–∞—Ü–µ—Ç–∞–º–æ–ª": {
        "–ö–ª–∞—Å—Å": "–ê–Ω–∞–ª—å–≥–µ—Ç–∏–∫",
        "–ü–æ–∫–∞–∑–∞–Ω–∏—è": "–ì–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å, –∂–∞—Ä, –±–æ–ª—å –≤ –º—ã—à—Ü–∞—Ö",
        "–î–æ–∑–∏—Ä–æ–≤–∫–∞": "500 –º–≥ –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤",
        "–ü–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã": "–¢–æ—à–Ω–æ—Ç–∞, –∞–ª–ª–µ—Ä–≥–∏—è, –Ω–∞—Ä—É—à–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—á–µ–Ω–∏"
    },
    "–ò–±—É–ø—Ä–æ—Ñ–µ–Ω": {
        "–ö–ª–∞—Å—Å": "–ù–ü–í–°",
        "–ü–æ–∫–∞–∑–∞–Ω–∏—è": "–ë–æ–ª—å, –≤–æ—Å–ø–∞–ª–µ–Ω–∏–µ, –∂–∞—Ä",
        "–î–æ–∑–∏—Ä–æ–≤–∫–∞": "200-400 –º–≥ –∫–∞–∂–¥—ã–µ 4-6 —á–∞—Å–æ–≤",
        "–ü–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã": "–ë–æ–ª—å –≤ –∂–∏–≤–æ—Ç–µ, –∏–∑–∂–æ–≥–∞, —Ç–æ—à–Ω–æ—Ç–∞"
    }
}


def show_loading_screen():
    loading_frame.pack(expand=True, fill='both')
    root.update()
    time.sleep(2)  # –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    loading_frame.pack_forget()
    show_title_screen()


def show_title_screen():
    title_frame.pack(expand=True, fill='both')


def start_app():
    title_frame.pack_forget()
    main_screen.pack(expand=True, fill='both')


def search_med():
    med_name = entry.get()
    med_info = data.get(med_name)
    result_frame.pack_forget()
    if med_info:
        result_text.set(f"üìå {med_name}\n\n"
                        f"üß™ –ö–ª–∞—Å—Å: {med_info['–ö–ª–∞—Å—Å']}\n"
                        f"‚úÖ –ü–æ–∫–∞–∑–∞–Ω–∏—è: {med_info['–ü–æ–∫–∞–∑–∞–Ω–∏—è']}\n"
                        f"üíä –î–æ–∑–∏—Ä–æ–≤–∫–∞: {med_info['–î–æ–∑–∏—Ä–æ–≤–∫–∞']}\n"
                        f"‚ö† –ü–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã: {med_info['–ü–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã']}")
        result_frame.pack(pady=10)
    else:
        result_text.set("‚ùå –õ–µ–∫–∞—Ä—Å—Ç–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        result_frame.pack(pady=10)


def show_medicine_info(med_name):
    med_info = data[med_name]
    messagebox.showinfo(med_name, f"üß™ –ö–ª–∞—Å—Å: {med_info['–ö–ª–∞—Å—Å']}\n\n"
                                  f"‚úÖ –ü–æ–∫–∞–∑–∞–Ω–∏—è: {med_info['–ü–æ–∫–∞–∑–∞–Ω–∏—è']}\n\n"
                                  f"üíä –î–æ–∑–∏—Ä–æ–≤–∫–∞: {med_info['–î–æ–∑–∏—Ä–æ–≤–∫–∞']}\n\n"
                                  f"‚ö† –ü–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã: {med_info['–ü–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã']}")


def show_game_screen():
    game_window = tk.Toplevel(root)
    game_window.title("–ú–∏–Ω–∏-–∏–≥—Ä–∞")
    game_window.geometry("400x300")
    game_label = tk.Label(game_window, text="–ú–∏–Ω–∏-–∏–≥—Ä–∞: —Å–æ—Å—Ç–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞", font=("Arial", 14))
    game_label.pack(pady=10)

    word = random.choice(list(data.keys()))
    shuffled_word = list(word)
    random.shuffle(shuffled_word)
    shuffled_word = ''.join(shuffled_word)

    question_label = tk.Label(game_window, text=f"–°–æ—Å—Ç–∞–≤—å—Ç–µ —Å–ª–æ–≤–æ: {shuffled_word}", font=("Arial", 12))
    question_label.pack(pady=5)

    entry_game = tk.Entry(game_window, font=("Arial", 12))
    entry_game.pack(pady=5)

    def check_answer():
        if entry_game.get() == word:
            messagebox.showinfo("–ü—Ä–∞–≤–∏–ª—å–Ω–æ!", "–í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ—Å—Ç–∞–≤–∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞!")
        else:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")

    check_button = tk.Button(game_window, text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å", font=("Arial", 12), command=check_answer)
    check_button.pack(pady=5)


root = tk.Tk()
root.title("MedFarm")
root.geometry("400x600")
root.configure(bg="#E0F7FA")

# –≠–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
loading_frame = tk.Frame(root, bg="#E0F7FA")
loading_label = tk.Label(loading_frame, text="–ó–∞–≥—Ä—É–∑–∫–∞...", font=("Arial", 24, "bold"), fg="#00796B", bg="#E0F7FA")
loading_label.pack(expand=True)

# –¢–∏—Ç—É–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω
title_frame = tk.Frame(root, bg="#E0F7FA")
title_label = tk.Label(title_frame, text="üíä MedFarm", font=("Arial", 24, "bold"), fg="#00796B", bg="#E0F7FA")
title_label.pack(pady=20)
start_button = tk.Button(title_frame, text="–ù–∞—á–∞—Ç—å", font=("Arial", 14), command=start_app)
start_button.pack()

# –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
main_screen = tk.Frame(root, bg="#E0F7FA")
search_label = tk.Label(main_screen, text="üîç –ü–æ–∏—Å–∫", font=("Arial", 18, "bold"), fg="#00796B", bg="#E0F7FA")
search_label.pack(pady=10)
entry = tk.Entry(main_screen, font=("Arial", 14))
entry.pack(pady=5)
search_button = tk.Button(main_screen, text="üîé –ù–∞–π—Ç–∏", font=("Arial", 14), command=search_med)
search_button.pack(pady=5)

result_text = tk.StringVar()
result_frame = tk.Frame(main_screen, bg="#E0F7FA")
result_label = tk.Label(result_frame, textvariable=result_text, font=("Arial", 12), wraplength=350, justify="left",
                        fg="#00796B", bg="#E0F7FA")
result_label.pack(pady=5)

med_list_frame = tk.Frame(main_screen, bg="#E0F7FA")
for med in data.keys():
    btn = tk.Button(med_list_frame, text=med, font=("Arial", 12), command=lambda m=med: show_medicine_info(m))
    btn.pack(pady=5)
med_list_frame.pack(pady=10)

# –ö–Ω–æ–ø–∫–∞ "–ú–∏–Ω–∏-–∏–≥—Ä–∞"
game_button = tk.Button(main_screen, text="üéÆ –ú–∏–Ω–∏-–∏–≥—Ä–∞", font=("Arial", 14), command=show_game_screen)
game_button.pack(pady=10)

show_loading_screen()
root.mainloop()
